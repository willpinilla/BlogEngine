// <auto-generated />
using System;
using BlogEngine.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BlogEngine.Repository.Migrations
{
    [DbContext(typeof(BlogEngineContext))]
    [Migration("20230327165850_seedData2")]
    partial class seedData2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true)
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PostId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 3, 27, 11, 58, 50, 80, DateTimeKind.Local).AddTicks(5487),
                            Description = "Nice blog!",
                            PostId = 2
                        });
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Post", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EditorComments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EditorId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("RevisionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WriterId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EditorId");

                    b.HasIndex("WriterId");

                    b.ToTable("Posts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 3, 27, 11, 58, 50, 80, DateTimeKind.Local).AddTicks(5462),
                            Description = "This is the first post",
                            Status = "PENDING APPROVAL",
                            Title = "First Post",
                            WriterId = 2
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 3, 27, 11, 58, 50, 80, DateTimeKind.Local).AddTicks(5472),
                            Description = "This is a published post",
                            EditorComments = "Good job",
                            EditorId = 3,
                            RevisionDate = new DateTime(2023, 3, 27, 11, 58, 50, 80, DateTimeKind.Local).AddTicks(5473),
                            Status = "APPROVED",
                            Title = "Post Completed",
                            WriterId = 2
                        });
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Profiles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Public"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Writer"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Editor"
                        });
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfileId")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProfileId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "public@blogengine.com",
                            Name = "public",
                            ProfileId = 1,
                            UserName = "public",
                            UserPassword = "public"
                        },
                        new
                        {
                            Id = 2,
                            Email = "writer@blogengine.com",
                            Name = "writer",
                            ProfileId = 2,
                            UserName = "writer",
                            UserPassword = "writer"
                        },
                        new
                        {
                            Id = 3,
                            Email = "editor@blogengine.com",
                            Name = "editor",
                            ProfileId = 3,
                            UserName = "editor",
                            UserPassword = "editor"
                        });
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Comment", b =>
                {
                    b.HasOne("BlogEngine.Utilities.Entities.Post", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Post");
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Post", b =>
                {
                    b.HasOne("BlogEngine.Utilities.Entities.User", "Editor")
                        .WithMany()
                        .HasForeignKey("EditorId");

                    b.HasOne("BlogEngine.Utilities.Entities.User", "Writer")
                        .WithMany()
                        .HasForeignKey("WriterId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Editor");

                    b.Navigation("Writer");
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.User", b =>
                {
                    b.HasOne("BlogEngine.Utilities.Entities.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Profile");
                });

            modelBuilder.Entity("BlogEngine.Utilities.Entities.Post", b =>
                {
                    b.Navigation("Comments");
                });
#pragma warning restore 612, 618
        }
    }
}
